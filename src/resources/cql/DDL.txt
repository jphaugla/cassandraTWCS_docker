create keyspace if not exists tcfods WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1};

use tcfods;

CREATE TABLE tcfods.transaction (
    transaction_id text PRIMARY KEY,
    account_number text,
    account_type text,
    address_verification_service text,
    advice_reason text,
    application_transaction_counter_code text,
    atm_transaction_reference_number text,
    available_balance decimal,
    cam_result text,
    card_class text,
    card_expiration_date timestamp,
    card_last_4digit text,
    card_number text,
    card_present_indicator text,
    card_transaction_type text,
    cash_deposit_amount decimal,
    cashback_amount decimal,
    channel_code text,
    channel_description text,
    check_deposit_amount decimal,
    check_serial_number text,
    collection_date timestamp,
    company_entry_description text,
    company_id text,
    company_name text,
    created_by text,
    created_datetime timestamp,
    current_balance decimal,
    currenttrace_number text,
    debit_credit_indicator text,
    deposit_type text,
    dishonored_return_reason_code text,
    dishonored_return_reason_description text,
    distribution_date timestamp,
    distribution_transaction_code text,
    ending_balance decimal,
    external_reference_key text,
    external_reference_key_type text,
    fall_back_indicator text,
    float_amount decimal,
    individual_card_account_number text,
    individual_identification_number text,
    individual_name text,
    interest_rate decimal,
    internal_reference_key text,
    language_type text,
    last_service_charge_date date,
    last_updated timestamp,
    last_updated_by text,
    ledger_balance decimal,
    merchant_category_code text,
    merchant_city text,
    merchant_country_code text,
    merchant_name text,
    merchant_postal_code text,
    merchant_state_code text,
    merchant_street_address text,
    message_type text,
    moto_indicator text,
    network_response_code text,
    network_system_trace_num text,
    next_service_charge_date date,
    next_statement_date date,
    original_trace_number text,
    original_transaction_amount decimal,
    originating_channel text,
    originating_dfi_identification text,
    originating_network text,
    overdraft_warning_screen text,
    overlaid_indicator text,
    pan_entry_mode text,
    pan_entry_mode_additional text,
    partial_authorization_indicator text,
    payment_related_info text,
    pin_used_indicator text,
    presentation_type text,
    product_code text,
    recurring_payment_indicator text,
    reg_eterminal_id text,
    relationship_pricing_code text,
    return_par_number text,
    return_reason_code text,
    return_reason_description text,
    reversal_reason text,
    security_condition text,
    solr_query text,
    special_transaction_code text,
    standard_entry_class_code text,
    surcharge_fee decimal,
    tcf_response_code text,
    tcf_sequence_number text,
    tcf_terminal_id text,
    teller_return_code text,
    terminal_identification_code text,
    terminal_pin_entry_capability text,
    token_indicator text,
    transaction_amount decimal,
    transaction_code text,
    transaction_date date,
    transaction_description text,
    transaction_expiration_date timestamp,
    transaction_initiation_date timestamp,
    transaction_month text,
    transaction_posting_date timestamp,
    transaction_settlement_date timestamp,
    transaction_status text,
    transaction_type text,
    transaction_year text
) WITH bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = ''
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.TimeWindowCompactionStrategy', 'compaction_window_size': '6', 'compaction_window_unit': 'DAYS', 'max_threshold': '32', 'min_threshold': '4', 'split_during_flush': 'true'}
    AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND dclocal_read_repair_chance = 0.1
    AND default_time_to_live = 15552000
    AND gc_grace_seconds = 432000
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 0
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99PERCENTILE';
